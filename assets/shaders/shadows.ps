
varying vec2 v_texCoord;

uniform sampler2D depthTexture;
uniform mat4 screenToWorld;
uniform mat4 worldToShadowMap;
uniform sampler2D shadowMapTexture;

float bias = 0.0001;

vec3 restoreWorldPosition()
{
    float x = v_texCoord.x * 2 - 1;
    float y = v_texCoord.y * 2 - 1;
    float z = texture2D(depthTexture, v_texCoord).x * 2 - 1;
    vec4 projectedPos = vec4(x, y, z, 1);
    vec4 pos = screenToWorld * projectedPos;
    return pos.rgb / pos.w;
}

void main()
{	
    vec3 position = restoreWorldPosition();
    
    vec4 sMapPos = worldToShadowMap * vec4(position, 1);
    sMapPos = (sMapPos / sMapPos.w) / 2 + 0.5; // 0..1
    
    float z = texture2D(shadowMapTexture, sMapPos.xy).x;
    
    float shadow = z + bias <= sMapPos.z ? 0.6 : 1;
    gl_FragColor = vec4(shadow, shadow, shadow, 1);
}